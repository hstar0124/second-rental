insertMember=INSERT INTO MEMBER VALUES(SEQ_USER_NO.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, DEFAULT, DEFAULT, SYSDATE, DEFAULT, DEFAULT, DEFAULT)
loginCheck=SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE M.USER_ID = ? AND M.PASSWORD = ? AND M.STATUS='\uC815\uC0C1' 
idCheck=SELECT * FROM MEMBER WHERE USER_ID=?
findId=SELECT USER_ID, USER_NAME FROM MEMBER WHERE USER_NAME=? AND EMAIL=?
findPwd=UPDATE MEMBER SET PASSWORD=? WHERE USER_ID=? AND EMAIL=?
selectOne=SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE USER_NO=?
selectAll=SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M
listCount=SELECT COUNT(*) FROM MEMBER WHERE STATUS != ? AND STATUS != ?
selectListWithPaging=SELECT RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT ROWNUM RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M ORDER BY 1 DESC)WHERE STATUS !='\uD0C8\uD1F4' AND STATUS !='\uC81C\uC81C') WHERE RNUM BETWEEN ? AND ? 
updateMember=UPDATE MEMBER SET PHONE=?, PASSWORD=?, EMAIL=?, ADDRESS=?, BANK=?, ACCOUNT=?, MODIFY_DATE = SYSDATE WHERE USER_NO=?
searchUserName=SELECT RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT ROWNUM RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE USER_NAME=? ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
userNameCount=SELECT COUNT(*) FROM MEMBER WHERE USER_NAME =?
searchUserId=SELECT RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT ROWNUM RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE USER_ID = ? ORDER BY 1 DESC))
searchUserNo=SELECT RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT ROWNUM RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE USER_NO = ? ORDER BY 1 DESC))
checkId=SELECT * FROM MEMBER WHERE USER_ID=?
loginCount=UPDATE MEMBER SET LOG_COUNT=? WHERE USER_ID=?
loginFalse=UPDATE MEMBER SET STATUS='\uC81C\uC81C', MODIFY_DATE=SYSDATE WHERE USER_NO=?
insertHistory=INSERT INTO MEMBER_HISTORY VALUES(SEQ_USER_HISTORY_NO .NEXTVAL, ?, SYSDATE, ?)
historyAllCount=SELECT COUNT(*) FROM MEMBER_HISTORY
historyListWithPaging=SELECT RNUM, HISTORY_NO, STATUS, TO_CHAR(MODIFY_DATE, 'YY"-"MM"-"DD" "HH24:MI:SS') DAY, USER_NO, USER_NAME FROM(SELECT ROWNUM RNUM, HISTORY_NO, STATUS, MODIFY_DATE, USER_NO, USER_NAME  FROM(SELECT H.HISTORY_NO, H.STATUS, H.MODIFY_DATE, H.USER_NO, M.USER_NAME FROM MEMBER_HISTORY H JOIN MEMBER M ON(M.USER_NO = H.USER_NO) ORDER BY 3 DESC)) WHERE RNUM BETWEEN ? AND ? ORDER BY MODIFY_DATE DESC
chatSelectAll=SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE M.STATUS='\uC815\uC0C1'
loginRestore = UPDATE MEMBER SET STATUS='\uC815\uC0C1', LOG_COUNT=0,  MODIFY_DATE=SYSDATE WHERE USER_NO=?
rentalCheck=SELECT R.RENTAL_NO, R.PRODUCT_NO, R.USER_NO, R.EXPIRY_DATE, R.START_DATE, H.STATUS FROM RENTAL R JOIN RENTAL_HISTORY H ON (R.RENTAL_NO = H.RENTAL_NO) WHERE H.RENTAL_HISTORY_DATE= (SELECT MAX(H.RENTAL_HISTORY_DATE) FROM RENTAL R JOIN RENTAL_HISTORY H ON (R.RENTAL_NO = H.RENTAL_NO) WHERE R.USER_NO = ? GROUP BY R.RENTAL_NO)
deleteMember = UPDATE MEMBER SET STATUS='\uD0C8\uD1F4', MODIFY_DATE=SYSDATE WHERE USER_NO=?
deleteListCount=SELECT COUNT(*) FROM MEMBER WHERE STATUS=?
deleteSelectListWithPaging=SELECT RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT ROWNUM RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M WHERE STATUS ='\uD0C8\uD1F4' ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ? 
memberRestore=UPDATE MEMBER SET STATUS='\uC815\uC0C1', MODIFY_DATE=SYSDATE WHERE USER_NO=?
updatePoint=UPDATE MEMBER SET POINT = ? WHERE USER_NO = ?
reportAllCount=SELECT COUNT(*) FROM REPORT
selectAllReport=SELECT RNUM, REPORT_NO, BOARD_NO, FROMNO, FROMNAME, TONO, TONAME, REPORT_DATE, REASON, STATUS FROM(SELECT ROWNUM RNUM, REPORT_NO, BOARD_NO, FROMNO, FROMNAME, TONO, TONAME, REPORT_DATE, REASON, STATUS FROM(SELECT R.REPORT_NO, R.BOARD_NO, R.FROM_USER_NO FROMNO, M.USER_NAME FROMNAME, R.TO_USER_NO TONO, C.USER_NAME TONAME, R.REPORT_DATE, R.REASON, R.STATUS FROM REPORT R JOIN MEMBER M ON(R.FROM_USER_NO = M.USER_NO) JOIN MEMBER C ON(R.TO_USER_NO = C.USER_NO) ORDER BY 7 DESC))WHERE RNUM BETWEEN ? AND ?
selectOneReport=SELECT BOARD_NO, REPORT_NO, RTITLE, RCONTENT, REASON, FROMNO, FNAME, TONO, TONAME FROM(SELECT P.BOARD_NO, P.REPORT_NO, R.RTITLE, R.RCONTENT, P.FROM_USER_NO FROMNO, M.USER_NAME FNAME, P.TO_USER_NO TONO, C.USER_NAME TONAME, P.REASON FROM REVIEW_BOARD R JOIN REPORT P ON(R.RBOARD_NO = P.BOARD_NO) JOIN MEMBER M ON(P.FROM_USER_NO = M.USER_NO) JOIN MEMBER C ON(P.TO_USER_NO = C.USER_NO) WHERE REPORT_NO = ?)
selectAllWanring=SELECT  REPORT_NO, BOARD_NO, RTITLE, FROM_USER_NO, TO_USER_NO, USER_NAME, REPORT_DATE, REASON, EMAIL, WARNING_COUNT, STATUS FROM(SELECT  R.REPORT_NO, R.BOARD_NO, R.FROM_USER_NO, R.TO_USER_NO, R.REPORT_DATE,B.RTITLE, R.REASON, M.EMAIL, M.USER_NAME, M.WARNING_COUNT, R.STATUS FROM REPORT R JOIN REVIEW_BOARD B ON(B.RBOARD_NO = R.BOARD_NO) JOIN MEMBER M ON(R.TO_USER_NO = M.USER_NO) WHERE (R.BOARD_NO, R.REPORT_DATE) IN (SELECT R.BOARD_NO, MAX(R.REPORT_DATE) FROM REPORT R GROUP BY R.BOARD_NO) AND R.BOARD_NO = ?)WHERE STATUS = '\uCC98\uB9AC\uC911'
selectWarningCount=SELECT USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM MEMBER WHERE USER_NO = ?
updateWaringMemberUpdate=UPDATE MEMBER SET WARNING_COUNT = ? WHERE USER_NO = ?
updateReportStatus=UPDATE REPORT SET STATUS=? WHERE BOARD_NO = ?
updateReview=UPDATE REVIEW_BOARD SET RSTATUS='N' WHERE RBOARD_NO = ?
insertWaringHistory=INSERT INTO WARNING_HISTORY VALUES(SEQ_WARNING_NO.NEXTVAL, ?, ?, SYSDATE, ?)
getWarningListCount=SELECT COUNT(*) FROM WARNING_HISTORY
selectAllWarningHistory=SELECT RNUM, WARNING_NO, REPORT_NO, USER_NO, USER_NAME, WARNING_DATE, EMP_NO, EMP_ID FROM(SELECT ROWNUM RNUM, H.WARNING_NO, H.REPORT_NO, H.USER_NO, M.USER_NAME,  H.WARNING_DATE, E.EMP_NO, E.EMP_ID FROM WARNING_HISTORY H JOIN EMPLOYEE E ON(H.EMP_NO = E.EMP_NO) JOIN MEMBER M ON(M.USER_NO = H.USER_NO) ORDER BY H.WARNING_DATE DESC) WHERE RNUM BETWEEN ? AND ?
getWarningMemberListCount=SELECT COUNT(*) FROM MEMBER WHERE WARNING_COUNT >= 3
warningMemberSelectAll=SELECT RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT ROWNUM RNUM, USER_NO, USER_ID, USER_NAME, PASSWORD, BIRTH, GENDER, EMAIL, PHONE, ADDRESS, BANK, ACCOUNT_HOLDER, ACCOUNT, POINT, WARNING_COUNT, ENROLL_DATE, MODIFY_DATE, STATUS, LOG_COUNT FROM(SELECT M.USER_NO, M.USER_ID, M.USER_NAME, M.PASSWORD, M.BIRTH, M.GENDER, M.EMAIL, M.PHONE, M.ADDRESS, M.BANK, M.ACCOUNT_HOLDER, M.ACCOUNT, M.POINT, M.WARNING_COUNT, M.ENROLL_DATE, M.MODIFY_DATE, M.STATUS, M.LOG_COUNT FROM MEMBER M  WHERE WARNING_COUNT >=3 ORDER BY 1)) WHERE RNUM BETWEEN ? AND ?
selectMemberEmail=SELECT EMAIL, USER_NO, USER_NAME, USER_ID FROM MEMBER WHERE USER_NO=? AND STATUS!='\uC81C\uC81C'
updateBlackMember=UPDATE MEMBER SET STATUS='\uC81C\uC81C', MODIFY_DATE=SYSDATE  WHERE USER_NO = ? AND STATUS!='\uD0C8\uD1F4'
sumOrderMoney=SELECT SUM(PRICE)orderMoney FROM(SELECT H.ORDER_CODE, H.STATUS, P.USER_NO, P.PRICE FROM PURCHASE P JOIN ORDER_HISTORY H ON(P.ORDER_CODE = H.ORDER_CODE) WHERE (H.ORDER_CODE, H.ORDER_DATE) IN (SELECT ORDER_CODE, MAX(ORDER_DATE) FROM ORDER_HISTORY GROUP BY ORDER_CODE) AND H.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND P.USER_NO = ?) GROUP BY USER_NO
orderCompleteCount=SELECT COUNT(*)CON FROM PURCHASE P JOIN ORDER_HISTORY H ON(P.ORDER_CODE = H.ORDER_CODE) WHERE H.STATUS = '\uBC30\uC1A1\uC644\uB8CC' AND USER_NO= ?
orderCancleCount=SELECT COUNT(*)CON FROM PURCHASE P JOIN ORDER_HISTORY H ON(P.ORDER_CODE = H.ORDER_CODE) WHERE H.STATUS = '\uC8FC\uBB38\uCDE8\uC18C' AND USER_NO= ?
shippingCount=SELECT COUNT(*)CON FROM PURCHASE P JOIN ORDER_HISTORY H ON(P.ORDER_CODE = H.ORDER_CODE) WHERE H.STATUS = '\uBC30\uC1A1\uC911' AND USER_NO= ?
getBuyDetailCount=SELECT COUNT(*) FROM(SELECT ROWNUM RNUM, H.BUY_NO, P.BUY_PRODUCT_NAME, B.USER_NO, M.USER_NAME, NVL(H.REASON, '-')REASON ,NVL(B.GRADE, '-') GRADE, NVL(B.BUY_PRICE, 0)PRICE, E.EMP_ID, TO_CHAR(H.BUY_DATE,'YY-MM-DD HH24:MI')DAY, H.BUY_STATUS FROM BUY_HISTORY H JOIN BUY_INFO B ON(H.BUY_NO = B.BUY_NO) JOIN EMPLOYEE E ON(E.EMP_NO = B.EMP_NO) JOIN MEMBER M ON(B.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON(B.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE (H.BUY_NO, H.BUY_DATE) IN (SELECT BUY_NO, MAX(BUY_DATE) FROM BUY_HISTORY GROUP BY BUY_NO) AND B.USER_NO = ? ORDER BY 1 DESC)
buyDetailSelectOne=SELECT RNUM, BUY_NO, BUY_PRODUCT_NAME, USER_NO, USER_NAME, GRADE, PRICE, EMP_ID, DAY, BUY_STATUS FROM(SELECT ROWNUM RNUM, H.BUY_NO, P.BUY_PRODUCT_NAME, B.USER_NO, M.USER_NAME, NVL(H.REASON, '-')REASON ,NVL(B.GRADE, '-') GRADE, NVL(B.BUY_PRICE, 0)PRICE, E.EMP_ID, TO_CHAR(H.BUY_DATE,'YY-MM-DD HH24:MI')DAY, H.BUY_STATUS FROM BUY_HISTORY H JOIN BUY_INFO B ON(H.BUY_NO = B.BUY_NO) JOIN EMPLOYEE E ON(E.EMP_NO = B.EMP_NO) JOIN MEMBER M ON(B.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON(B.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE (H.BUY_NO, H.BUY_DATE) IN (SELECT BUY_NO, MAX(BUY_DATE) FROM BUY_HISTORY GROUP BY BUY_NO) AND B.USER_NO = ? ORDER BY 1 DESC) WHERE RNUM BETWEEN ? AND ?
buyFalseCount=SELECT COUNT(*) FROM(SELECT ROWNUM RNUM, H.BUY_NO, P.BUY_PRODUCT_NAME, B.USER_NO, M.USER_NAME, NVL(H.REASON, '-')REASON ,NVL(B.GRADE, '-') GRADE, NVL(B.BUY_PRICE, 0)PRICE, E.EMP_ID, TO_CHAR(H.BUY_DATE,'YY-MM-DD HH24:MI')DAY, H.BUY_STATUS FROM BUY_HISTORY H JOIN BUY_INFO B ON(H.BUY_NO = B.BUY_NO) JOIN EMPLOYEE E ON(E.EMP_NO = B.EMP_NO) JOIN MEMBER M ON(B.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON(B.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE (H.BUY_NO, H.BUY_DATE) IN (SELECT BUY_NO, MAX(BUY_DATE) FROM BUY_HISTORY GROUP BY BUY_NO) AND H.BUY_STATUS = '\uB9E4\uC785\uBD88\uAC00' AND B.USER_NO = ? ORDER BY 1 DESC)
buyComCount=SELECT COUNT(*) FROM(SELECT ROWNUM RNUM, H.BUY_NO, P.BUY_PRODUCT_NAME, B.USER_NO, M.USER_NAME, NVL(H.REASON, '-')REASON ,NVL(B.GRADE, '-') GRADE, NVL(B.BUY_PRICE, 0)PRICE, E.EMP_ID, TO_CHAR(H.BUY_DATE,'YY-MM-DD HH24:MI')DAY, H.BUY_STATUS FROM BUY_HISTORY H JOIN BUY_INFO B ON(H.BUY_NO = B.BUY_NO) JOIN EMPLOYEE E ON(E.EMP_NO = B.EMP_NO) JOIN MEMBER M ON(B.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON(B.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE (H.BUY_NO, H.BUY_DATE) IN (SELECT BUY_NO, MAX(BUY_DATE) FROM BUY_HISTORY GROUP BY BUY_NO) AND H.BUY_STATUS = '\uB9E4\uC785\uC644\uB8CC' AND B.USER_NO = ? ORDER BY 1 DESC)
allBuyMoney=SELECT NVL(SUM(PRICE), 0) FROM(SELECT ROWNUM RNUM, H.BUY_NO, P.BUY_PRODUCT_NAME, B.USER_NO, M.USER_NAME, NVL(H.REASON, '-')REASON ,NVL(B.GRADE, '-') GRADE, NVL(B.BUY_PRICE, 0)PRICE, E.EMP_ID, TO_CHAR(H.BUY_DATE,'YY-MM-DD HH24:MI')DAY, H.BUY_STATUS FROM BUY_HISTORY H JOIN BUY_INFO B ON(H.BUY_NO = B.BUY_NO) JOIN EMPLOYEE E ON(E.EMP_NO = B.EMP_NO) JOIN MEMBER M ON(B.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON(B.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE (H.BUY_NO, H.BUY_DATE) IN (SELECT BUY_NO, MAX(BUY_DATE) FROM BUY_HISTORY GROUP BY BUY_NO) AND H.BUY_STATUS = '\uB9E4\uC785\uC644\uB8CC' AND B.USER_NO = ? ORDER BY 1 DESC)
wishListCount=SELECT COUNT(*) FROM WISHLIST WHERE USER_NO = ?
basketCount=SELECT COUNT(*) FROM BASKET WHERE USER_NO = ?
reviewCount=SELECT COUNT(*) FROM REVIEW_BOARD WHERE RWRITER=?
rentalList=SELECT RNUM, PRODUCT_NO, PRODUCT_NAME, CHANGE_NAME, PRICE, RENTAL_MONTH, START_DATE, EXPIRY_DATE, RENTAL_STATUS, ORDER_STATUS, RECIPIENT, PHONE, ADDRESS, ORDER_NO, ORDER_CODE, RENTAL_NO, REFUND_STATUS, RTITLE FROM (SELECT ROWNUM RNUM, PRODUCT_NO, PRODUCT_NAME, CHANGE_NAME, RENTAL_MONTH, START_DATE, EXPIRY_DATE, RENTAL_STATUS, ORDER_STATUS, RECIPIENT, PHONE, ADDRESS, PRICE, ORDER_NO, ORDER_CODE, RENTAL_NO, REFUND_STATUS, RTITLE FROM (SELECT P.PRODUCT_NO, P.PRODUCT_NAME, PA.CHANGE_NAME, (PC.PRICE-PC.USE_POINT)PRICE, CEIL(MONTHS_BETWEEN(R.EXPIRY_DATE, R.START_DATE)) RENTAL_MONTH, R.START_DATE, R.EXPIRY_DATE, RH.STATUS RENTAL_STATUS, OH.STATUS ORDER_STATUS, PC.RECIPIENT, PC.PHONE, PC.ADDRESS, PC.ORDER_NO, PC.ORDER_CODE, RH.RENTAL_NO, WI.STATUS REFUND_STATUS, RB.RTITLE FROM RENTAL R JOIN PRODUCT P ON(P.PRODUCT_NO=R.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON (P.PRODUCT_NO=PA.PRODUCT_NO) JOIN (SELECT P1.RENTAL_NO, P1.ORDER_CODE, P2.ORDER_NO, P2.USER_NO, P2.PRICE, P2.USE_POINT, P2.RENTAL_MONTH, P2.ORDER_DATE, P2.PRODUCT_NO, P2.RECIPIENT, P2.PHONE, P2.ADDRESS FROM (SELECT RENTAL_NO, MIN(ORDER_CODE) ORDER_CODE FROM PURCHASE GROUP BY RENTAL_NO) P1 JOIN PURCHASE P2 ON(P1.ORDER_CODE = P2.ORDER_CODE)) PC ON(R.RENTAL_NO=PC.RENTAL_NO) JOIN (SELECT * FROM RENTAL_HISTORY R WHERE (R.RENTAL_NO, R.RENTAL_HISTORY_DATE) IN (SELECT RENTAL_NO, MAX(RENTAL_HISTORY_DATE) RENTAL_DATE FROM RENTAL_HISTORY GROUP BY RENTAL_NO) )RH ON (RH.RENTAL_NO=R.RENTAL_NO) JOIN (SELECT OH1.ORDER_CODE, OH2.STATUS FROM (SELECT ORDER_CODE, MAX(ORDER_DATE)ORDER_DATE FROM ORDER_HISTORY GROUP BY ORDER_CODE) OH1 LEFT JOIN ORDER_HISTORY OH2 ON(OH1.ORDER_DATE=OH2.ORDER_DATE AND OH1.ORDER_CODE=OH2.ORDER_CODE) )OH ON (OH.ORDER_CODE=PC.ORDER_CODE) JOIN (SELECT P.ORDER_CODE, R.REFUND_NO ,RH.STATUS FROM PURCHASE P, REFUND R, (SELECT RF1.REFUND_NO, RF2.STATUS FROM (SELECT REFUND_NO, MAX(PROCESS_DATE) PROCESS_DATE FROM REFUND_HISTORY GROUP BY REFUND_NO) RF1 JOIN REFUND_HISTORY RF2 ON (RF1.PROCESS_DATE=RF2.PROCESS_DATE AND RF1.REFUND_NO = RF2.REFUND_NO))RH WHERE P.ORDER_CODE = R.ORDER_CODE(+) AND R.REFUND_NO = RH.REFUND_NO(+) )WI ON (WI.ORDER_CODE = PC.ORDER_CODE) LEFT JOIN REVIEW_BOARD RB ON (RB.RENTAL_NO = R.RENTAL_NO) WHERE PA.PRODUCT_LEVEL = 1 AND PC.USER_NO = ? ORDER BY R.START_DATE DESC)T1 )T2 WHERE T2.RNUM BETWEEN ? AND ? AND RENTAL_STATUS ='\uB80C\uD0C8\uC911'
countRentalList=SELECT COUNT(*) FROM (SELECT ROWNUM RNUM, PRODUCT_NO, PRODUCT_NAME, CHANGE_NAME, RENTAL_MONTH, START_DATE, EXPIRY_DATE, RENTAL_STATUS, ORDER_STATUS, RECIPIENT, PHONE, ADDRESS, PRICE, ORDER_NO, ORDER_CODE, RENTAL_NO, REFUND_STATUS, RTITLE FROM (SELECT P.PRODUCT_NO, P.PRODUCT_NAME, PA.CHANGE_NAME, (PC.PRICE-PC.USE_POINT)PRICE, CEIL(MONTHS_BETWEEN(R.EXPIRY_DATE, R.START_DATE)) RENTAL_MONTH, R.START_DATE, R.EXPIRY_DATE, RH.STATUS RENTAL_STATUS, OH.STATUS ORDER_STATUS, PC.RECIPIENT, PC.PHONE, PC.ADDRESS, PC.ORDER_NO, PC.ORDER_CODE, RH.RENTAL_NO, WI.STATUS REFUND_STATUS, RB.RTITLE FROM RENTAL R JOIN PRODUCT P ON(P.PRODUCT_NO=R.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON (P.PRODUCT_NO=PA.PRODUCT_NO) JOIN (SELECT P1.RENTAL_NO, P1.ORDER_CODE, P2.ORDER_NO, P2.USER_NO, P2.PRICE, P2.USE_POINT, P2.RENTAL_MONTH, P2.ORDER_DATE, P2.PRODUCT_NO, P2.RECIPIENT, P2.PHONE, P2.ADDRESS FROM (SELECT RENTAL_NO, MIN(ORDER_CODE) ORDER_CODE FROM PURCHASE GROUP BY RENTAL_NO) P1 JOIN PURCHASE P2 ON(P1.ORDER_CODE = P2.ORDER_CODE)) PC ON(R.RENTAL_NO=PC.RENTAL_NO) JOIN (SELECT * FROM RENTAL_HISTORY R WHERE (R.RENTAL_NO, R.RENTAL_HISTORY_DATE) IN (SELECT RENTAL_NO, MAX(RENTAL_HISTORY_DATE) RENTAL_DATE FROM RENTAL_HISTORY GROUP BY RENTAL_NO) )RH ON (RH.RENTAL_NO=R.RENTAL_NO) JOIN (SELECT OH1.ORDER_CODE, OH2.STATUS FROM (SELECT ORDER_CODE, MAX(ORDER_DATE)ORDER_DATE FROM ORDER_HISTORY GROUP BY ORDER_CODE) OH1 LEFT JOIN ORDER_HISTORY OH2 ON(OH1.ORDER_DATE=OH2.ORDER_DATE AND OH1.ORDER_CODE=OH2.ORDER_CODE) )OH ON (OH.ORDER_CODE=PC.ORDER_CODE) JOIN (SELECT P.ORDER_CODE, R.REFUND_NO ,RH.STATUS FROM PURCHASE P, REFUND R, (SELECT RF1.REFUND_NO, RF2.STATUS FROM (SELECT REFUND_NO, MAX(PROCESS_DATE) PROCESS_DATE FROM REFUND_HISTORY GROUP BY REFUND_NO) RF1 JOIN REFUND_HISTORY RF2 ON (RF1.PROCESS_DATE=RF2.PROCESS_DATE AND RF1.REFUND_NO = RF2.REFUND_NO))RH WHERE P.ORDER_CODE = R.ORDER_CODE(+) AND R.REFUND_NO = RH.REFUND_NO(+) )WI ON (WI.ORDER_CODE = PC.ORDER_CODE) LEFT JOIN REVIEW_BOARD RB ON (RB.RENTAL_NO = R.RENTAL_NO) WHERE PA.PRODUCT_LEVEL = 1 AND PC.USER_NO = ? ORDER BY R.START_DATE DESC)T1 )T2 WHERE RENTAL_STATUS ='\uB80C\uD0C8\uC911'
newMemberChart=SELECT JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC FROM(SELECT COUNT(*) JAN FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/01/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) FEB FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/02/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) MAR FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/03/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) APR FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/04/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) MAY FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/05/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) JUN FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/06/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) JUL FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/07/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) AUG FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/08/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) SEP FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/09/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) OCT FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/10/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) NOV FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/11/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? ), (SELECT COUNT(*) DEC FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 3,4) = '/12/' AND SUBSTR(ENROLL_DATE, 1, 2) = ? )
selectDate=SELECT SUBSTR(SYSDATE,1,5) day FROM DUAL
memberStats=SELECT NEWMEMBER, MEN, WOMEN, ONE, TWO, THREE, FOUR, FIVE, SIX FROM(SELECT COUNT(*) NEWMEMBER FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=?), (SELECT COUNT(*) MEN FROM MEMBER WHERE GENDER = 'M' AND SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=?), (SELECT COUNT(*) WOMEN FROM MEMBER WHERE GENDER = 'F' AND SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=?), (SELECT COUNT(*)ONE FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=? AND NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0) BETWEEN 10 AND 19), (SELECT COUNT(*)TWO FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=? AND NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0) BETWEEN 20 AND 29), (SELECT COUNT(*)THREE FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=? AND NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0) BETWEEN 30 AND 39), (SELECT COUNT(*)FOUR FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=? AND NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0) BETWEEN 40 AND 49), (SELECT COUNT(*)FIVE FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=? AND NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0) BETWEEN 50 AND 59), (SELECT COUNT(*)SIX FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)=? AND SUBSTR(ENROLL_DATE, 1, 2)=? AND NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0) BETWEEN 60 AND 69)
getStatsMemberListCount=SELECT COUNT(*) FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)= ? AND SUBSTR(ENROLL_DATE, 1, 2)= ?
selectStatsMemberList=SELECT RNUM, DAY, USER_ID, DECODE(GENDER, 'M','\uB0A8\uC131', 'F','\uC5EC\uC131')GENDER, AGE FROM(SELECT ROWNUM RNUM, TO_CHAR(ENROLL_DATE, 'RRRR.MM.DD')DAY, USER_ID, GENDER, NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTH, 1, 2), 'RRRR'))/12), 0)AGE FROM MEMBER WHERE SUBSTR(ENROLL_DATE, 4,2)= ? AND SUBSTR(ENROLL_DATE, 1, 2)= ? ORDER BY 2 DESC) WHERE RNUM BETWEEN ? AND ?
memberHistoryChart=SELECT LOGIN, WARNING, OUT FROM (SELECT COUNT(*)WARNING FROM MEMBER_HISTORY WHERE STATUS = '\uC81C\uC7AC' AND SUBSTR(MODIFY_DATE, 4,2) = ? AND SUBSTR(MODIFY_DATE, 1, 2) = ?), (SELECT COUNT(*)OUT FROM MEMBER_HISTORY WHERE STATUS = '\uD0C8\uD1F4' AND SUBSTR(MODIFY_DATE, 4,2) = ? AND SUBSTR(MODIFY_DATE, 1, 2) = ?), (SELECT COUNT(*)LOGIN FROM MEMBER_HISTORY WHERE STATUS = '\uB85C\uADF8\uC778\uC2E4\uD328' AND SUBSTR(MODIFY_DATE, 4, 2) = ? AND SUBSTR(MODIFY_DATE, 1, 2) = ?)
sumOrderChart=SELECT NVL(JAN, 0) ONE, NVL(FEB, 0) TWO, NVL(MAR, 0) THREE, NVL(APR, 0) FOUR, NVL(MAY, 0) FIVE, NVL(JUN, 0) SIX, NVL(JUL, 0) SEVEN, NVL(AUG, 0) EIGHT, NVL(SEPT, 0) NINE, NVL(OCT,0) TEN, NVL(NOV, 0) ELEVEN, NVL(DEC, 0) TEELVE FROM (SELECT SUM(PRICE) JAN FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '01' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) FEB FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '02' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) MAR FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '03' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) APR FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '04' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) MAY FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '05' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) JUN FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '06' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) JUL FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '07' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) AUG FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '08' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) SEPT FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '09' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) OCT FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '10' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) NOV FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '11' AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT SUM(PRICE) DEC FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS != '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = '12' AND SUBSTR(O.ORDER_DATE, 1,2) = ?))
countOrderStats=SELECT ORD, PAY, REFUND FROM(SELECT COUNT(*)ORD FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS = '\uC8FC\uBB38\uCDE8\uC18C' AND SUBSTR(O.ORDER_DATE,4,2) = ? AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT COUNT(*)PAY FROM(SELECT  P.ORDER_CODE, P.PRICE, O.STATUS, O.ORDER_DATE FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) WHERE (P.ORDER_CODE , O.ORDER_DATE) IN (SELECT P.ORDER_CODE, MAX(O.ORDER_DATE) FROM PURCHASE P JOIN ORDER_HISTORY O ON(P.ORDER_CODE = O.ORDER_CODE) GROUP BY P.ORDER_CODE) AND O.STATUS = '\uACB0\uC81C\uC644\uB8CC' AND SUBSTR(O.ORDER_DATE,4,2) = ? AND SUBSTR(O.ORDER_DATE, 1,2) = ?)), (SELECT COUNT(*) REFUND FROM(SELECT P.ORDER_CODE, R.REFUND_DATE, H.STATUS FROM PURCHASE P JOIN REFUND R ON (P.ORDER_CODE = R.ORDER_CODE) JOIN REFUND_HISTORY H ON(R.REFUND_NO = H.REFUND_NO) WHERE (P.ORDER_CODE, R.REFUND_DATE) IN (SELECT P.ORDER_CODE, MAX(R.REFUND_DATE) FROM PURCHASE P JOIN REFUND R ON (P.ORDER_CODE = R.ORDER_CODE) JOIN REFUND_HISTORY H ON(R.REFUND_NO = H.REFUND_NO) GROUP BY P.ORDER_CODE) AND SUBSTR(R.REFUND_DATE, 4, 2) =? AND SUBSTR(R.REFUND_DATE, 1, 2) =? AND H.STATUS = '\uD658\uBD88 \uCC98\uB9AC \uC644\uB8CC'))


































































































































































































































































































































































































































































































































