insertPayment=INSERT INTO PAYMENT_CONFIRM VALUES(?,?,?,?,?,SYSDATE,?) 
selectImpId=SELECT IMP_UID WHERE TESTPAY
insertPurchase=INSERT INTO PURCHASE VALUES(SEQ_ORDER_CODE.NEXTVAL,?,?,?,?,?,?,SYSDATE,?,?,?,?)
getListCount=SELECT COUNT(*) FROM (SELECT RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, OH.STATUS FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT OH.ORDER_HISTORY_NO, OH.STATUS, OH.ORDER_DATE, OH.ORDER_CODE FROM (SELECT ORDER_CODE,MAX(ORDER_HISTORY_NO) "OHN" FROM ORDER_HISTORY GROUP BY ORDER_CODE) GOH JOIN ORDER_HISTORY OH ON(OH.ORDER_HISTORY_NO = GOH.OHN)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) ORDER BY PU.ORDER_CODE+0 DESC)))
selectList=SELECT RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS,ORDER_HISTORY_DATE ,TRUNC(SYSDATE-ORDER_HISTORY_DATE)+1 "BETWEEN" FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS, ORDER_HISTORY_DATE FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, OH.STATUS, OH.ORDER_DATE "ORDER_HISTORY_DATE" FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT * FROM ORDER_HISTORY WHERE (ORDER_CODE, ORDER_DATE) IN (SELECT ORDER_CODE,MAX(ORDER_DATE) "OHN" FROM ORDER_HISTORY GROUP BY ORDER_CODE)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) ORDER BY PU.ORDER_CODE+0 DESC)) WHERE RNUM BETWEEN ? AND ?
selectOrderCode=SELECT P.ORDER_CODE, R.RENTAL_NO, R.PRODUCT_NO FROM PURCHASE P JOIN RENTAL R ON(R.RENTAL_NO = P.RENTAL_NO) WHERE ORDER_NO = ?
insertOrderHistory=INSERT INTO ORDER_HISTORY VALUES(SEQ_ORDER_HISTORY_NO.NEXTVAL, ?, SYSDATE,?)
selectOrderDetail=SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, OH.STATUS, OH.ORDER_DATE "HISTORY_DATE" FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN ORDER_HISTORY OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE PU.ORDER_NO = ? AND PR.PRODUCT_NO = ? UNION SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, RH.STATUS, RH.PROCESS_DATE "HISTORY_DATE" FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN REFUND R ON(R.ORDER_CODE = PU.ORDER_CODE) JOIN REFUND_HISTORY RH ON(RH.REFUND_NO = R.REFUND_NO) WHERE PU.ORDER_NO = ? AND PR.PRODUCT_NO = ? ORDER BY HISTORY_DATE DESC
getListCountUser=SELECT COUNT(DISTINCT ORDER_NO) FROM (SELECT RNUM, USER_ID, USER_NAME, ORDER_NO, ORDER_CODE, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, CHANGE_NAME, STATUS FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, CHANGE_NAME, STATUS FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, PA.CHANGE_NAME, OH.STATUS FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON(PA.PRODUCT_NO = PU.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT OH.ORDER_HISTORY_NO, OH.STATUS, OH.ORDER_DATE, OH.ORDER_CODE FROM (SELECT ORDER_CODE,MAX(ORDER_HISTORY_NO) "OHN" FROM ORDER_HISTORY GROUP BY ORDER_CODE) GOH JOIN ORDER_HISTORY OH ON(OH.ORDER_HISTORY_NO = GOH.OHN)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE PU.USER_NO = ? AND PA.DIVISION = ? AND PA.PRODUCT_LEVEL = 1 ORDER BY PU.ORDER_CODE+0 DESC)))
selectListUser=SELECT RNUM, USER_ID, USER_NAME, ORDER_NO, ORDER_CODE, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, CHANGE_NAME, STATUS, ORDER_HISTORY_DATE, TRUNC(SYSDATE-ORDER_HISTORY_DATE)+1 "BETWEEN" FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, CHANGE_NAME, STATUS, ORDER_HISTORY_DATE FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, PA.CHANGE_NAME, OH.STATUS, OH.ORDER_DATE "ORDER_HISTORY_DATE" FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON(PA.PRODUCT_NO = PU.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT * FROM ORDER_HISTORY WHERE (ORDER_CODE, ORDER_DATE) IN (SELECT ORDER_CODE,MAX(ORDER_DATE) "OHN" FROM ORDER_HISTORY GROUP BY ORDER_CODE)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE PU.USER_NO = ? AND PA.DIVISION = ? AND PA.PRODUCT_LEVEL = 1 ORDER BY PU.ORDER_CODE+0 DESC)) WHERE RNUM BETWEEN ? AND ?
updatePurchaseStatus=UPDATE PURCHASE SET STATUS = ? WHERE ORDER_NO = ?
selectPaymentNo=SELECT PAYMENT_NO FROM PAYMENT_CONFIRM WHERE ORDER_NO = ?
getListCountRental=SELECT COUNT(*) FROM(SELECT RNUM, RENTAL_NO, PRODUCT_NO, USER_NO, USER_NAME, USER_ID, EXPIRY_DATE, START_DATE, RENTAL_PRICE, REST_TIME, STATUS ,RENTAL_HISTORY_DATE FROM(SELECT ROWNUM RNUM, RENTAL_NO, PRODUCT_NO, USER_NO, USER_NAME, USER_ID, EXPIRY_DATE, START_DATE, RENTAL_PRICE, REST_TIME, STATUS,RENTAL_HISTORY_DATE FROM(SELECT R.RENTAL_NO, R.PRODUCT_NO, R.USER_NO, M.USER_NAME, M.USER_ID, R.EXPIRY_DATE, R.START_DATE, R.RENTAL_PRICE, CEIL(R.EXPIRY_DATE-SYSDATE)+1 "REST_TIME", RH.STATUS,RH.RENTAL_HISTORY_DATE FROM RENTAL R JOIN RENTAL_HISTORY RH ON(R.RENTAL_NO = RH.RENTAL_NO) JOIN MEMBER M ON(M.USER_NO = R.USER_NO) WHERE (RH.RENTAL_NO, RENTAL_HISTORY_DATE) IN (SELECT RENTAL_NO, MAX(RENTAL_HISTORY_DATE) "HISTORY_DATE" FROM RENTAL_HISTORY GROUP BY RENTAL_NO) ORDER BY REST_TIME)))
selectListRental=SELECT RNUM, RENTAL_NO, PRODUCT_NO, USER_NO, USER_NAME, USER_ID, EXPIRY_DATE, START_DATE, RENTAL_PRICE, REST_TIME, STATUS ,RENTAL_HISTORY_DATE FROM(SELECT ROWNUM RNUM, RENTAL_NO, PRODUCT_NO, USER_NO, USER_NAME, USER_ID, EXPIRY_DATE, START_DATE, RENTAL_PRICE, REST_TIME, STATUS,RENTAL_HISTORY_DATE FROM(SELECT R.RENTAL_NO, R.PRODUCT_NO, R.USER_NO, M.USER_NAME, M.USER_ID, R.EXPIRY_DATE, R.START_DATE, R.RENTAL_PRICE, CEIL(R.EXPIRY_DATE-SYSDATE)+1 "REST_TIME", RH.STATUS,RH.RENTAL_HISTORY_DATE FROM RENTAL R JOIN RENTAL_HISTORY RH ON(R.RENTAL_NO = RH.RENTAL_NO) JOIN MEMBER M ON(M.USER_NO = R.USER_NO) WHERE (RH.RENTAL_NO, RENTAL_HISTORY_DATE) IN (SELECT RENTAL_NO, MAX(RENTAL_HISTORY_DATE) "HISTORY_DATE" FROM RENTAL_HISTORY GROUP BY RENTAL_NO) ORDER BY REST_TIME)) WHERE RNUM BETWEEN ? AND ?
insertPointHistory=INSERT INTO USE_POINT_HISTORY VALUES(SEQ_POINT_HISTORY.NEXTVAL, ?,SYSDATE,?,?,?,DEFAULT)
updateMemberPoint=UPDATE MEMBER SET POINT = (SELECT POINT FROM MEMBER WHERE USER_NO = ?)-? WHERE USER_NO = ?
selectListOrder=SELECT P.ORDER_CODE, P.ORDER_NO, P.RENTAL_NO, P.USER_NO, P.PRICE, P.USE_POINT, P.RENTAL_MONTH, P.ORDER_DATE, P.PRODUCT_NO, PC.PRICE "PAY_PRICE", PC.DELIVERY_PRICE, PR.PRODUCT_NAME, PA.CHANGE_NAME FROM PURCHASE P JOIN PAYMENT_CONFIRM PC ON(PC.ORDER_NO = P.ORDER_NO) JOIN PRODUCT PR ON(P.PRODUCT_NO = PR.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON(P.PRODUCT_NO = PA.PRODUCT_NO) WHERE PC.ORDER_NO = ? AND PA.PRODUCT_LEVEL = 1 AND PA.DIVISION = ?
getCancelListCountUser=SELECT COUNT(*) FROM (SELECT USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, OH.STATUS FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT OH.ORDER_HISTORY_NO, OH.STATUS, GOH.ORDER_DATE, GOH.ORDER_CODE FROM (SELECT ORDER_CODE,MAX(ORDER_DATE) "ORDER_DATE" FROM ORDER_HISTORY GROUP BY ORDER_CODE) GOH JOIN ORDER_HISTORY OH ON(OH.ORDER_DATE = GOH.ORDER_DATE)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE PU.USER_NO = ? AND OH.STATUS = ? ORDER BY PU.ORDER_CODE DESC)))
selectCancelListUser=SELECT USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE,  CHANGE_NAME, STATUS FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, CHANGE_NAME, STATUS FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, PA.CHANGE_NAME, OH.STATUS FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON(PA.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT OH.ORDER_HISTORY_NO, OH.STATUS, GOH.ORDER_DATE, GOH.ORDER_CODE FROM (SELECT ORDER_CODE,MAX(ORDER_DATE) "ORDER_DATE" FROM ORDER_HISTORY GROUP BY ORDER_CODE) GOH JOIN ORDER_HISTORY OH ON(OH.ORDER_DATE = GOH.ORDER_DATE)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE PU.USER_NO = ? AND OH.STATUS = ? AND PA.DIVISION = ? AND PA.PRODUCT_LEVEL = 1 ORDER BY PU.ORDER_CODE+0 DESC)) WHERE RNUM BETWEEN ? AND ?
insertDeliveryHistory=INSERT INTO DELIVERY_HISTORY_PURCHASE VALUES(SEQ_DELIVERY_HISTORY_NO.NEXTVAL, ?, ?, ?, SYSDATE, ?)
selectPurchase=SELECT * FROM PURCHASE WHERE RENTAL_NO = ?
getCancelListCount=SELECT COUNT(*) FROM (SELECT USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, OH.STATUS FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT OH.ORDER_HISTORY_NO, OH.STATUS, GOH.ORDER_DATE, GOH.ORDER_CODE FROM (SELECT ORDER_CODE,MAX(ORDER_DATE) "ORDER_DATE" FROM ORDER_HISTORY GROUP BY ORDER_CODE) GOH JOIN ORDER_HISTORY OH ON(OH.ORDER_DATE = GOH.ORDER_DATE)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE OH.STATUS = ? ORDER BY PU.ORDER_CODE DESC)))
selectCancelList=SELECT RNUM, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT ROWNUM RNUM, ORDER_CODE, USER_ID, USER_NAME, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, ORDER_DATE, PRICE, STATUS FROM(SELECT PU.ORDER_CODE, M.USER_ID, M.USER_NAME, PU.ORDER_NO, PR.PRODUCT_NO, PR.PRODUCT_NAME, PU.ORDER_DATE, PU.PRICE, OH.STATUS FROM PURCHASE PU JOIN PRODUCT PR ON(PU.PRODUCT_NO = PR.PRODUCT_NO) JOIN MEMBER M ON(M.USER_NO = PU.USER_NO) JOIN (SELECT OH.ORDER_HISTORY_NO, OH.STATUS, GOH.ORDER_DATE, GOH.ORDER_CODE FROM (SELECT ORDER_CODE,MAX(ORDER_DATE) "ORDER_DATE" FROM ORDER_HISTORY GROUP BY ORDER_CODE) GOH JOIN ORDER_HISTORY OH ON(OH.ORDER_DATE = GOH.ORDER_DATE)) OH ON(OH.ORDER_CODE = PU.ORDER_CODE) WHERE OH.STATUS = ? ORDER BY PU.ORDER_CODE+0 DESC)) WHERE RNUM BETWEEN ? AND ?
insertRental=INSERT INTO RENTAL VALUES(SEQ_RENTAL_NO.NEXTVAL, ?, ?, ADD_MONTHS(SYSDATE,?)+7, SYSDATE, ?, ?)
selectRentalNo=SELECT RENTAL_NO,  PRODUCT_NO, USER_NO, EXPIRY_DATE, START_DATE, RENTAL_PRICE, TAKE_OVER FROM (SELECT R.RENTAL_NO, RP.PRODUCT_NO, R.USER_NO, R.EXPIRY_DATE, R.START_DATE, R.RENTAL_PRICE, R.TAKE_OVER FROM RENTAL R JOIN (SELECT PRODUCT_NO, MAX(START_DATE) "START_DATE" FROM RENTAL GROUP BY PRODUCT_NO) RP ON(R.START_DATE = RP.START_DATE)) WHERE PRODUCT_NO = ?
insertRentalHistory=INSERT INTO RENTAL_HISTORY VALUES(?, ?, SYSDATE)
insertProductHistory=INSERT INTO PRODUCT_HISTORY VALUES(SEQ_PRO_HISTORY_NO.NEXTVAL, ?, ?, SYSDATE)
selectAttachment=SELECT CHANGE_NAME FROM PRODUCT_ATTACHMENT PA JOIN PRODUCT P ON(P.PRODUCT_NO = PA.PRODUCT_NO) WHERE P.PRODUCT_NO = ? AND PA.DIVISION = ? AND PA.PRODUCT_LEVEL = 1
updateRental=UPDATE RENTAL SET EXPIRY_DATE = ADD_MONTHS((SELECT EXPIRY_DATE FROM RENTAL WHERE RENTAL_NO = ?),?), RENTAL_PRICE = (SELECT RENTAL_PRICE FROM RENTAL WHERE RENTAL_NO = ?) + ? WHERE RENTAL_NO = ?
getRefundListCount=SELECT COUNT(*) FROM(SELECT RNUM, USER_ID, USER_NAME, ORDER_DATE, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, PRICE, STATUS, REASON, RATE, REFUND_DATE, REFUND_NO, PROCESS_DATE FROM (SELECT ROWNUM RNUM, USER_ID, USER_NAME, ORDER_DATE, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, PRICE, STATUS, REASON, RATE, REFUND_DATE, REFUND_NO, PROCESS_DATE FROM (SELECT M.USER_ID, M.USER_NAME, PH.ORDER_DATE, PH.ORDER_NO, P.PRODUCT_NO, P.PRODUCT_NAME, PH.PRICE, RH.STATUS, R.REASON, R.RATE, R.REFUND_DATE, R.REFUND_NO, RH.PROCESS_DATE FROM REFUND R JOIN PURCHASE PH ON(PH.ORDER_CODE = R.ORDER_CODE) JOIN MEMBER M ON(M.USER_NO = PH.USER_NO) JOIN PRODUCT P ON(P.PRODUCT_NO = PH.PRODUCT_NO) JOIN REFUND_HISTORY RH ON(R.REFUND_NO = RH.REFUND_NO) ORDER BY REFUND_NO + 0) WHERE (REFUND_NO, PROCESS_DATE) IN (SELECT REFUND_NO, MAX(PROCESS_DATE) "PROCESS_DATE" FROM REFUND_HISTORY GROUP BY REFUND_NO) ORDER BY RNUM DESC))
selectRefundList=SELECT RNUM, USER_ID, USER_NAME, ORDER_DATE, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, PRICE, STATUS, REASON, RATE, REFUND_DATE, REFUND_NO, PROCESS_DATE FROM (SELECT ROWNUM RNUM, USER_ID, USER_NAME, ORDER_DATE, ORDER_NO, PRODUCT_NO, PRODUCT_NAME, PRICE, STATUS, REASON, RATE, REFUND_DATE, REFUND_NO, PROCESS_DATE FROM (SELECT M.USER_ID, M.USER_NAME, PH.ORDER_DATE, PH.ORDER_NO, P.PRODUCT_NO, P.PRODUCT_NAME, PH.PRICE, RH.STATUS, R.REASON, R.RATE, R.REFUND_DATE, R.REFUND_NO, RH.PROCESS_DATE FROM REFUND R JOIN PURCHASE PH ON(PH.ORDER_CODE = R.ORDER_CODE) JOIN MEMBER M ON(M.USER_NO = PH.USER_NO) JOIN PRODUCT P ON(P.PRODUCT_NO = PH.PRODUCT_NO) JOIN REFUND_HISTORY RH ON(R.REFUND_NO = RH.REFUND_NO) ORDER BY REFUND_NO + 0) WHERE (REFUND_NO, PROCESS_DATE) IN (SELECT REFUND_NO, MAX(PROCESS_DATE) "PROCESS_DATE" FROM REFUND_HISTORY GROUP BY REFUND_NO) ORDER BY RNUM DESC) WHERE RNUM BETWEEN ? AND ?
selectOneRefund=SELECT R.REFUND_NO, R.ORDER_CODE, R.REFUND_DATE, R.RATE, PH.PRICE, PH.USER_NO, PH.RENTAL_NO FROM REFUND R JOIN PURCHASE PH ON(PH.ORDER_CODE = R.ORDER_CODE) WHERE REFUND_NO = ?
insertRefundHistory=INSERT INTO REFUND_HISTORY VALUES(SEQ_REFUND_HISTORY_NO.NEXTVAL, ?, SYSDATE, ?)
insertRefundPointHistory=INSERT INTO REFUND_POINT_HISTORY VALUES(SEQ_POINT_HISTORY.NEXTVAL, ?,SYSDATE,?,?,?, DEFAULT)
insertReturnReason=INSERT INTO RETURN_REASON VALUES(SEQ_RETURN_REASON_NO.NEXTVAL, ?, ?, ?)
selectRefundHistoryNo=SELECT RH2.REFUND_HISTORY_NO FROM (SELECT REFUND_NO, MAX(PROCESS_DATE) "PROCESS_DATE" FROM REFUND_HISTORY GROUP BY REFUND_NO) RH JOIN REFUND_HISTORY RH2 ON(RH.PROCESS_DATE = RH2.PROCESS_DATE) JOIN REFUND R ON(R.REFUND_NO = RH.REFUND_NO) WHERE RH2.REFUND_NO = ?
selectRefundReason=SELECT REASON FROM REFUND WHERE ORDER_CODE = ?
selectRentalBasket=SELECT R.PRODUCT_NO, P.PRODUCT_NAME, TRUNC(MONTHS_BETWEEN(EXPIRY_DATE,START_DATE)) "MONTH", R.RENTAL_PRICE, TAKE_OVER, PA.CHANGE_NAME FROM RENTAL R JOIN PRODUCT P ON(P.PRODUCT_NO = R.PRODUCT_NO) JOIN PRODUCT_ATTACHMENT PA ON(P.PRODUCT_NO = PA.PRODUCT_NO) WHERE RENTAL_NO = ? AND PA.PRODUCT_LEVEL = 1 AND PA.DIVISION=?
updateRentalBasket=UPDATE RENTAL SET START_DATE = SYSDATE, EXPIRY_DATE = ADD_MONTHS(SYSDATE,?)+7 WHERE RENTAL_NO = ?
deleteBasket=DELETE FROM BASKET WHERE USER_NO = ? AND RENTAL_NO = ?
selectWaybillNo=SELECT DHP.WAYBILL_NO, DHP.CARRIER_NO, P.RECIPIENT, P.ADDRESS FROM DELIVERY_HISTORY_PURCHASE DHP JOIN PURCHASE P ON(P.ORDER_CODE = DHP.ORDER_CODE) WHERE DHP.ORDER_CODE = ? 
updateProduct=UPDATE PRODUCT SET RENTAL_STATUS = ? WHERE PRODUCT_NO = ?