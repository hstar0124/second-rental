selectCategory=SELECT DISTINCT B.CATEGORY_NO, C.CATEGORY_NAME, B.MANUFACTURER_NO, M.MANUFACTURER_NAME FROM BUY_PRODUCT B JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO) JOIN MANUFACTURER M ON (B.MANUFACTURER_NO = M.MANUFACTURER_NO) WHERE B.CATEGORY_NO = ?
selectManufacturerName=SELECT B.BUY_PRODUCT_NAME, B.BUY_PRODUCT_NO, B.CATEGORY_NO, C.CATEGORY_NAME FROM BUY_PRODUCT B JOIN MANUFACTURER M ON(B.MANUFACTURER_NO = M.MANUFACTURER_NO) JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO) WHERE B.CATEGORY_NO = ? AND B.MANUFACTURER_NO = ?
selectBuyPrice=SELECT S *(R/100)PRICE FROM(SELECT BP.MARKETPRICE S FROM BUY_INFO I JOIN BUY_PRODUCT BP ON (I.BUY_PRODUCT_NO = BP.BUY_PRODUCT_NO) WHERE BP.BUY_PRODUCT_NO = ?), (SELECT DR.RATE R FROM BUY_INFO I JOIN DISCOUNT_RATE DR ON (I.GRADE = DR.GRADE) WHERE DR.GRADE = ?)
insertbuyinfotable=INSERT INTO BUY_INFO VALUES(SEQ_BUY_NO.NEXTVAL, ?, ?, SYSDATE, ?, ?, NULL, ?, ?, NULL)
selectbuyNo=SELECT BUY_NO FROM(SELECT BUY_NO FROM BUY_INFO ORDER BY TO_NUMBER(BUY_NO) DESC) WHERE ROWNUM = 1
insertPhoto=INSERT INTO BUY_ATTACHMENT VALUES(SEQ_BUY_ATTACHMENT.NEXTVAL, ?, ?, ?, SYSDATE, 1, ?)
insertUserCheckList=INSERT ALL INTO USER_ANSWER VALUES(?, ?, ?, ?) INTO USER_ANSWER VALUES(?, ?, ?, ?) INTO USER_ANSWER VALUES(?, ?, ?, ?) INTO USER_ANSWER VALUES(?, ?, ?, ?) INTO USER_ANSWER VALUES(?, ?, ?, ?) INTO USER_ANSWER VALUES(?, ?, ?, ?) SELECT * FROM DUAL
insertBuyHistory=INSERT INTO BUY_HISTORY VALUES(NULL, SYSDATE, ?, NULL, ?)
#paging
listCount=SELECT COUNT(*) FROM BUY_INFO WHERE BUY_STATUS IN(?, ?, ?, ?, ?)
listCountCurrent=SELECT COUNT(*) FROM BUY_INFO 
selectListPaging=SELECT RNUM, BUY_NO, USER_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, BUY_STATUS, USER_NAME, GRADE, BUY_PRICE, BUY_PRODUCT_NO FROM(SELECT ROWNUM RNUM, BUY_NO, USER_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, BUY_STATUS, USER_NAME, GRADE, BUY_PRICE, BUY_PRODUCT_NO FROM(SELECT I.BUY_NO, M.USER_NO, M.USER_ID, P.BUY_PRODUCT_NAME, I.SAFEKEY, I.REQUEST_DATE, I.BUY_STATUS, M.USER_NAME, I.GRADE, I.BUY_PRICE, P.BUY_PRODUCT_NO FROM BUY_INFO I JOIN MEMBER M ON (I.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON (I.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE BUY_STATUS IN(?, ?, ?, ?, ?) ORDER BY REQUEST_DATE DESC)) WHERE RNUM BETWEEN ? AND ?
selectCurrentList=SELECT RNUM, BUY_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, CP, BUY_STATUS FROM(SELECT ROWNUM RNUM, BUY_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, CP, BUY_STATUS FROM (SELECT I.BUY_NO, M.USER_ID, P.BUY_PRODUCT_NAME, I.SAFEKEY, I.REQUEST_DATE, DECODE(PO.CHANGE_POINT, NULL, ?, PO.CHANGE_POINT) CP, I.BUY_STATUS FROM BUY_INFO I JOIN MEMBER M ON (I.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON (I.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) LEFT OUTER JOIN BUY_POINT_HISTORY PO ON (I.BUY_NO = PO.BUY_NO) ORDER BY REQUEST_DATE DESC)) WHERE RNUM BETWEEN ? AND ?

listCountReject=SELECT COUNT(*) FROM BUY_INFO WHERE BUY_STATUS IN (?, ?)
##selectRejectList=SELECT  RNUM, BUY_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, REASON, BUY_STATUS, WAYBILL_NO, DIVISION FROM(SELECT  ROWNUM RNUM, BUY_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, REASON, BUY_STATUS, WAYBILL_NO, DIVISION FROM(SELECT  I.BUY_NO, M.USER_ID, P.BUY_PRODUCT_NAME, I.SAFEKEY, I.REQUEST_DATE, BH.REASON, I.BUY_STATUS ,NVL(DH.WAYBILL_NO , '-')WAYBILL_NO, NVL(DH.DIVISION, '-')DIVISION FROM BUY_INFO I JOIN MEMBER M ON (I.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON (I.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) JOIN BUY_HISTORY BH ON (I.BUY_NO = BH.BUY_NO) LEFT OUTER JOIN DELIVERY_HISTORY_RETURN DH ON(I.BUY_NO = DH.BUY_NO) WHERE BH.BUY_STATUS IN (?, ?) ORDER BY REQUEST_DATE DESC)) WHERE RNUM BETWEEN ? AND ?
selectRejectList=SELECT  RNUM, BUY_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, REASON, BUY_STATUS, STATUS, DIVISION, WAYBILL_NO, USER_NAME FROM(SELECT  ROWNUM RNUM, BUY_NO, USER_ID, BUY_PRODUCT_NAME, SAFEKEY, REQUEST_DATE, REASON, BUY_STATUS, STATUS, DIVISION, WAYBILL_NO, USER_NAME FROM(SELECT  I.BUY_NO, M.USER_ID, P.BUY_PRODUCT_NAME, I.SAFEKEY, I.REQUEST_DATE, BH.REASON, I.BUY_STATUS ,DD.STATUS, DD.DIVISION, DD.WAYBILL_NO, M.USER_NAME FROM BUY_INFO I JOIN MEMBER M ON (I.USER_NO = M.USER_NO) JOIN BUY_PRODUCT P ON (I.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) JOIN BUY_HISTORY BH ON (I.BUY_NO = BH.BUY_NO) LEFT OUTER JOIN (SELECT * FROM DELIVERY_HISTORY_RETURN DHR WHERE (DHR.BUY_NO, DHR.DELIVERY_DATE) IN (SELECT BUY_NO, MAX(DELIVERY_DATE) FROM DELIVERY_HISTORY_RETURN GROUP BY BUY_NO) ORDER BY DHR.BUY_NO+0) DD ON(I.BUY_NO = DD.BUY_NO) WHERE BH.BUY_STATUS IN (?, ?) ORDER BY REQUEST_DATE DESC)) WHERE RNUM BETWEEN ? AND ?
listCountMypage=SELECT COUNT(*) FROM BUY_INFO WHERE USER_NO = ?
#mypage
selectBuyList=SELECT RNUM, BUY_NO, BUY_PRODUCT_NAME, REQUEST_DATE, BUY_STATUS, USER_ID, GRADE, BUY_PRICE, WAYBILL_NO , CARRIER, REASON, DIVISION FROM(SELECT ROWNUM RNUM, BUY_NO, BUY_PRODUCT_NAME, REQUEST_DATE, BUY_STATUS, USER_ID, GRADE, BUY_PRICE, WAYBILL_NO , CARRIER, REASON, DIVISION FROM(SELECT I.BUY_NO, P.BUY_PRODUCT_NAME, I.REQUEST_DATE, I.BUY_STATUS, M.USER_ID , NVL(I.GRADE, '-')GRADE,  NVL(I.BUY_PRICE ,0)BUY_PRICE, NVL(DH.WAYBILL_NO, '-')WAYBILL_NO , NVL(C.CARRIER_NAME, '-') CARRIER, NVL(BH.REASON, '-')REASON, NVL(DH.DIVISION, '-')DIVISION FROM BUY_INFO I JOIN BUY_PRODUCT P ON (I.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) JOIN MEMBER M ON (I.USER_NO = M.USER_NO) JOIN BUY_HISTORY BH ON(I.BUY_NO = BH.BUY_NO) LEFT OUTER JOIN (SELECT * FROM DELIVERY_HISTORY_RETURN DHR WHERE (DHR.BUY_NO, DHR.DELIVERY_DATE) IN (SELECT BUY_NO, MAX(DELIVERY_DATE) FROM DELIVERY_HISTORY_RETURN GROUP BY BUY_NO) ORDER BY DHR.BUY_NO+0) DH ON(I.BUY_NO = DH.BUY_NO) LEFT OUTER JOIN CARRIER C ON (DH.CARRIER_NO = C.CARRIER_NO) WHERE I.USER_NO = ? AND I.BUY_STATUS = BH.BUY_STATUS ORDER BY I.REQUEST_DATE DESC)) WHERE RNUM BETWEEN ? AND ?
updateBuyStatus=UPDATE BUY_INFO SET BUY_STATUS = ? WHERE BUY_NO = ?
insertBuyHistoryStatus=INSERT INTO BUY_HISTORY VALUES (?, SYSDATE, ?, NULL, ?)
#exampleList select
selectExampleList=SELECT Q.QUESTION_NO, Q.QUESTION_CONTENT, E.EXAMPLE_NO, E.EXAMPLE_CONTENT, I.BUY_NO, P.BUY_PRODUCT_NAME, M.USER_NO, M.USER_NAME FROM USER_ANSWER U JOIN QUESTION Q ON (U.QUESTION_NO = Q.QUESTION_NO) JOIN EXAMPLE E ON (U.EXAMPLE_NO = E.EXAMPLE_NO) JOIN MEMBER M ON (U.USER_NO = M.USER_NO) JOIN BUY_INFO I ON (U.BUY_NO = I.BUY_NO) JOIN BUY_PRODUCT P ON(I.BUY_PRODUCT_NO = P.BUY_PRODUCT_NO) WHERE I.BUY_NO = ?
#userPhotoList select
selectUserPhotoList=SELECT I.BUY_NO, A.BUY_ATTACHMENT_NO, A.ORIGIN_NAME, A.CHANGE_NAME, M.USER_ID, M.USER_NO FROM BUY_INFO I JOIN BUY_ATTACHMENT A ON (I.BUY_NO = A.BUY_NO) JOIN MEMBER M ON (I.USER_NO = M.USER_NO) WHERE I.BUY_NO = ?
#updateFirstCheck
updateFirstCheck=UPDATE BUY_INFO SET EMP_NO = ?, BUY_STATUS = ? WHERE BUY_NO = ?
insertFirstHistory=INSERT INTO BUY_HISTORY VALUES(?, SYSDATE, ?, ?, ?)
updateFirstCheckReject=UPDATE BUY_INFO SET EMP_NO = ?, BUY_STATUS = ? WHERE BUY_NO = ?
#selectDetail
selectRequestDetail=SELECT M.USER_NAME, I.USER_NO, M.USER_ID, BP.BUY_PRODUCT_NAME, NVL(I.BUY_ADDRESS, '-') BUYADDRESS, NVL(DH.WAYBILL_NO, '-')WAYBILL_NO FROM MEMBER M JOIN BUY_INFO I ON (M.USER_NO = I.USER_NO) JOIN BUY_PRODUCT BP ON (I.BUY_PRODUCT_NO = BP.BUY_PRODUCT_NO) LEFT OUTER JOIN DELIVERY_HISTORY_RETURN DH ON (I.BUY_NO = DH.BUY_NO) WHERE I.BUY_NO = ?
selectRequestDetailReject=SELECT M.USER_NAME, I.USER_NO, M.USER_ID, BP.BUY_PRODUCT_NAME, NVL(I.BUY_ADDRESS, '-') BUYADDRESS, NVL(DH.WAYBILL_NO,'-')WAYBILL_NO, DH.DIVISION FROM MEMBER M JOIN BUY_INFO I ON (M.USER_NO = I.USER_NO) JOIN BUY_PRODUCT BP ON (I.BUY_PRODUCT_NO = BP.BUY_PRODUCT_NO) LEFT OUTER JOIN DELIVERY_HISTORY_RETURN DH ON (I.BUY_NO = DH.BUY_NO) WHERE I.BUY_NO = ?
#selectQuote
selectQuote=SELECT BUY_NO, BUY_PRICE FROM BUY_INFO WHERE BUY_NO = ?
#updateSecondCheck
updateSecondCheck=UPDATE BUY_INFO SET BUY_STATUS = ?, BUY_PRICE = ?, GRADE = ? WHERE BUY_NO = ?
insertEmpAnswer=INSERT ALL INTO EMP_ANSWER VALUES (?, ?, ?, ?) INTO EMP_ANSWER VALUES (?, ?, ?, ?) INTO EMP_ANSWER VALUES (?, ?, ?, ?) INTO EMP_ANSWER VALUES (?, ?, ?, ?)  SELECT * FROM DUAL
insertBuyPoint=INSERT INTO BUY_POINT_HISTORY VALUES (SEQ_POINT_HISTORY.NEXTVAL, ?, SYSDATE, ?, ?, ?, DEFAULT)
insertSecondHistory=INSERT INTO BUY_HISTORY VALUES (?, SYSDATE, ?, ?, ?)
updateSecondCheckReject=UPDATE BUY_INFO SET BUY_STATUS = ? WHERE BUY_NO = ?
#delivery
insertWaybill=INSERT INTO DELIVERY_HISTORY_RETURN VALUES (SEQ_DELIVERY_HISTORY_NO.NEXTVAL, ?, ?, ?, SYSDATE, ?, ?)
updateBuyAddress=UPDATE BUY_INFO SET BUY_ADDRESS = ? WHERE BUY_NO = ?
#POINT
selectPoint=SELECT USER_NO, POINT FROM MEMBER WHERE USER_NO = ?
updatePoint=UPDATE MEMBER SET POINT = ? WHERE USER_NO = ?



